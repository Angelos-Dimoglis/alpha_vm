    Table t is: [{key1 : 1}, {key2 : 2}, {key3 : tria}, {key4 : true}, {key5 : [{1 : 3}, {2 : 4}, {4 : 5}, ]}, ]
    Lenght of table t is (must be 5):5
    Function prnt printing: prnt() and print: lib::print
    Table t in prnt is: [{0 : [{key1 : 1}, {key2 : 2}, {key3 : tria}, {key4 : true}, {key5 : [{1 : 3}, {2 : 4}, {4 : 5}, ]}, ]}, {1 : 2}, {2 : 3.14}, {3 : 4}, {4 : true}, {5 : false}, ]
    Table indices of global t: [{0 : key1}, {1 : key2}, {2 : key3}, {3 : key4}, {4 : key5}, ] which has length: 5
    Table copy is: [{key1 : 1}, {key2 : 2}, {key3 : tria}, {key4 : true}, {key5 : [{1 : 3}, {2 : 4}, {4 : 5}, ]}, ] and it is printed with print_function
    PASSED: value: nil type: nil
    PASSED: value: nil type: nil
    PASSED: value: 3.141 type: number
    PASSED value: 1.41421 != 1.41421
    PASSED: value: nil type: nil
    PASSED value: 0.5 type: number
    PASSED value: 0.5 type: number
    PASSED: value: nil type: nil
    PASSED: value: nil type: nil
    --->12
    Testing lib function typeof

    trypeof([1,2,3])        :>table<
    trypeof((function(){})) :userfunction<
    trypeof(typeof) :libraryfunction<

    Testing lib function input and typeof (type exit for exit)

    input: 3
    typeof(stdin): number, value of stdin: 3
    input: 3.4
    typeof(stdin): number, value of stdin: 3.4
    input: true
    typeof(stdin): boolean, value of stdin: true
    input: false
    typeof(stdin): boolean, value of stdin: false
    input: p[
    typeof(stdin): string, value of stdin: p[
    input: 4.4a
    typeof(stdin): string, value of stdin: 4.4a
    input: "gap gap gap"
    typeof(stdin): string, value of stdin: "gap gap gap"
    input: exit
    typeof(stdin): string, value of stdin: exit
